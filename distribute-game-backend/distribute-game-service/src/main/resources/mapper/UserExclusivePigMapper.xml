<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.gongyu.service.distribute.game.mapper.UserExclusivePigMapper">
	<!--查询字段 -->
	<sql id="columns">
		a.user_id,
		a.order_id,
		a.pig_id,
		a.is_able_sale,
		a.price,
		a.from_user_id,
		a.appoint_user_id,
		a.buy_time,
		a.end_time,
		a.pig_salt,
		a.buy_type,
		a.now_contract_days,
		a.now_income_ratio,
		a.is_pig_lock
	</sql>

	<!--查询结果集 -->
	<resultMap id="beanMap"
		type="com.gongyu.service.distribute.game.model.dto.UserExclusivePigDTO">
		<result property="userId" column="user_id" />
		<result property="orderId" column="order_id" />
		<result property="pigId" column="pig_id" />
		<result property="isAbleSale" column="is_able_sale" />
		<result property="price" column="price" />
		<result property="fromUserId" column="from_user_id" />
		<result property="appointUserId" column="appoint_user_id" />
		<result property="buyTime" column="buy_time" />
		<result property="endTime" column="end_time" />
		<result property="pigSalt" column="pig_salt" />
		<result property="buyType" column="buy_type" />
		<result property="nowContractDays" column="now_contract_days" />
		<result property="nowIncomeRatio" column="now_income_ratio" />
		<result property="isPigLock" column="is_pig_lock" />
	</resultMap>

	<select id="findPage"
		resultType="com.gongyu.service.distribute.game.model.dto.UserExclusivePigDTO">
		select
		p.*,
		g.goods_name AS goodsName,
		u.mobile AS userPhone
		from
		zp_user_exclusive_pig p
		left join zp_users u ON p.user_id = u.id
		left join zp_pig_goods g on p.pig_id = g.id
		where 1=1
		<if test="param.userPhone != null and param.userPhone != ''">
			AND u.mobile like concat(#{param.userPhone}, "%")
		</if>
		<if test="param.userId != null and param.userId != ''">
			AND u.id = #{param.userId}
		</if>
		<if test="param.pigId != null and param.pigId != ''">
			AND p.pig_id = #{param.pigId}
		</if>
		<if test="param.saleStatus != null">
			AND p.is_able_sale = #{param.saleStatus}
		</if>
		<if test="param.isPigLock !=null">
			AND p.is_pig_lock = #{param.isPigLock}
		</if>
		order by p.id desc
	</select>



	<select id="prizeToday"
		resultType="com.gongyu.service.distribute.game.model.dto.UserExclusivePigDTO">
		select
		p.*,
		g.goods_name AS goodsName,
		u.mobile AS userPhone
		from
		zp_user_exclusive_pig p
		left join zp_users u ON p.user_id = u.id
		left
		join zp_pig_goods g on p.pig_id = g.id
		where 1=1
		/* 出售人和收购人相同 或者
		产品领养已到期的进入今日开奖 |（当前时间戳大于结束时间戳）*/
		and (p.user_id = from_user_id OR
		unix_timestamp(now()) >= p.end_time)
		/* 木材可出售状态 */
		and p.is_able_sale =
		1
		<if test="param.userPhone != null and param.userPhone != ''">
			AND u.mobile like concat(#{param.userPhone}, "%")
		</if>
		<if test="param.userId != null and param.userId != ''">
			AND u.id = #{param.userId}
		</if>
		<if test="param.pigId != null and param.pigId != ''">
			AND p.pig_id = #{param.pigId}
		</if>
		and p.is_pig_lock = 0
		order by p.id desc
	</select>

	<select id="prizeAllToday"
		resultType="com.gongyu.service.distribute.game.model.dto.UserExclusivePigDTO">
		select
		p.*,
		g.goods_name AS goodsName,
		u.mobile AS userPhone
		from
		zp_user_exclusive_pig p
		left join zp_users u ON p.user_id = u.id
		left
		join zp_pig_goods g on p.pig_id = g.id
		where 1=1
		/* 出售人和收购人相同 或者
		产品领养已到期的进入今日开奖 |（当前时间戳大于结束时间戳）*/
		and (p.user_id = from_user_id OR
		unix_timestamp(now()) >= p.end_time)
		/* 木材可出售状态 */
		and p.is_able_sale =
		1
		<if test="param.userPhone != null and param.userPhone != ''">
			AND u.mobile like concat(#{param.userPhone}, "%")
		</if>
		<if test="param.userId != null and param.userId != ''">
			AND u.id = #{param.userId}
		</if>
		<if test="param.pigId != null and param.pigId != ''">
			AND p.pig_id = #{param.pigId}
		</if>
		and p.is_pig_lock = 0
		order by p.id desc
	</select>
	<insert id="insertForeach" parameterType="java.util.List"
		useGeneratedKeys="true" keyProperty="id">
		insert into zp_user_exclusive_pig
		(
		user_id,
		order_id,
		pig_id,
		is_able_sale,
		price,
		from_user_id,
		appoint_user_id,
		buy_time,
		end_time,
		pig_salt,
		buy_type,
		now_contract_days,
		now_income_ratio,
		is_pig_lock
		)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			#{item.userId},
			#{item.orderId},
			#{item.pigId},
			#{item.isAbleSale},
			#{item.price},
			#{item.fromUserId},
			#{item.appointUserId},
			#{item.buyTime},
			#{item.endTime},
			#{item.pigSalt},
			#{item.buyType},
			#{item.nowContractDays},
			#{item.nowIncomeRatio},
			#{item.isPigLock}
			)
		</foreach>
	</insert>

	<update id="updateForeach" parameterType="list">
		update zp_user_exclusive_pig
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="order_id =case" suffix="end,">
				<foreach collection="list" item="item" index="index">
					when id=#{item.id} then #{item.orderId}
				</foreach>
			</trim>
		</trim>
		where id in
		<foreach collection="list" item="item" index="index"
			separator="," open="(" close=")">
			#{item.id}
		</foreach>
	</update>
</mapper>